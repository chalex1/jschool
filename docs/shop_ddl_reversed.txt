CREATE TABLE ORDERS_GOODS
(
    ID_GOODS NUMBER(*) NOT NULL,
    ID_ORDER NUMBER(*) NOT NULL,
    PRICE_ON_MOMENT NUMBER(*),
    CONSTRAINT ORDRS_GDS_IDGDS_IDORDER_PK PRIMARY KEY (ID_GOODS, ID_ORDER),
    CONSTRAINT ID_GOODS_FRK FOREIGN KEY (ID_GOODS) REFERENCES GOODS (ID),
    CONSTRAINT ID_ORDER_FK FOREIGN KEY (ID_ORDER) REFERENCES ORDERS (ID)
);
CREATE TABLE ACCOUNTS
(
    ID NUMBER(*) PRIMARY KEY NOT NULL,
    NAME VARCHAR2(100),
    SURNAME VARCHAR2(100),
    LOGIN VARCHAR2(100),
    PASSWORD VARCHAR2(100),
    EMAIL VARCHAR2(100),
    BIRTHDAY VARCHAR2(100)
);
CREATE TABLE ADDRESSES
(
    ID NUMBER(*) PRIMARY KEY NOT NULL,
    COUNTRY VARCHAR2(100),
    CITY VARCHAR2(100),
    POSTCODE VARCHAR2(100),
    STREET VARCHAR2(100),
    HOME VARCHAR2(100),
    FLAT VARCHAR2(100)
);
CREATE TABLE CATEGORIES
(
    ID NUMBER(*) PRIMARY KEY NOT NULL,
    NAME VARCHAR2(100)
);
CREATE TABLE CLIENTS
(
    ID NUMBER(*) PRIMARY KEY NOT NULL,
    ID_ADDRESS NUMBER(*),
    ID_ACCOUNT NUMBER(*),
    CONSTRAINT ID_ADDRESS_FK FOREIGN KEY (ID_ADDRESS) REFERENCES ADDRESSES (ID),
    CONSTRAINT ID_ACCOUNT_FK FOREIGN KEY (ID_ACCOUNT) REFERENCES ACCOUNTS (ID)
);
CREATE TABLE GOODS
(
    ID NUMBER(*) PRIMARY KEY NOT NULL,
    NAME VARCHAR2(100),
    PRICE NUMBER(*),
    PARAMETER1 VARCHAR2(100),
    PARAMETER2 VARCHAR2(100),
    PARAMETER3 VARCHAR2(100),
    WEIGHT NUMBER(*),
    VOLUME NUMBER(*),
    QUANTITY NUMBER(*)
);
CREATE TABLE GOODS_CATEGORIES
(
    ID_CATEGORY NUMBER(*) NOT NULL,
    ID_GOODS NUMBER(*) NOT NULL,
    CONSTRAINT GDS_CATEG_ID_CATEG_ID_GDS_PK PRIMARY KEY (ID_CATEGORY, ID_GOODS),
    CONSTRAINT ID_CATEGORY_FK FOREIGN KEY (ID_CATEGORY) REFERENCES CATEGORIES (ID),
    CONSTRAINT ID_GOODS_FK FOREIGN KEY (ID_GOODS) REFERENCES GOODS (ID)
);
CREATE TABLE ORDERS
(
    ID NUMBER(*) PRIMARY KEY NOT NULL,
    PAYMENT_METHOD VARCHAR2(100),
    DELIVERY_METHOD VARCHAR2(100),
    PAYMENT_STATUS VARCHAR2(100),
    STATUS VARCHAR2(100),
    ID_CLIENT NUMBER(*),
    CONSTRAINT ID_CLIENT_FK FOREIGN KEY (ID_CLIENT) REFERENCES CLIENTS (ID)
);